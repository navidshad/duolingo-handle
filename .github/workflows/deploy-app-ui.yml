name: Deploy App UI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build the Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:${{ github.sha }} -f app-ui.Dockerfile .
      
      # Push the Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the Docker image to EC2 by SSH
      - name: Deploy the Docker image to EC2 by SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            export UI_CONTAINER=duolingo-handle-ui
            export UI_IMAGE_TAG=current-ui
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p '${{ secrets.DOCKER_PASSWORD }}' && docker pull ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:${{ github.sha }}
            docker stop $UI_CONTAINER || true
            docker rm $UI_CONTAINER || true
            docker rmi ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:$UI_IMAGE_TAG || true
            docker tag ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:$UI_IMAGE_TAG
            docker run -d --restart=always --name $UI_CONTAINER -p 80:80 ${{ secrets.DOCKER_USERNAME }}/duolingo-handle:$UI_IMAGE_TAG